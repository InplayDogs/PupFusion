{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inplay Dogs\\\\inplaydogs-project\\\\frontend\\\\src\\\\components\\\\DogboneArcade\\\\mini-games\\\\PackMemory.js\",\n  _s = $RefreshSig$();\n// src/components/DogboneArcade/mini-games/PackMemory.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport GameHighScoreLeaderboard from \"../../leaderboards/GameHighScoreLeaderboard\";\nimport { db, auth } from \"../../../firebaseConfig\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport \"./PackMemory.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PackMemory = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const intervalRef = useRef(null);\n  const startGame = () => {\n    setScore(0);\n    setGameOver(false);\n    setIsPlaying(true);\n    intervalRef.current = setInterval(() => {\n      setScore(prevScore => {\n        const newScore = prevScore + Math.floor(Math.random() * 3) + 1;\n        if (newScore >= 50) {\n          clearInterval(intervalRef.current);\n          endGame(newScore);\n        }\n        return newScore;\n      });\n    }, 400);\n  };\n  const endGame = async finalScore => {\n    setGameOver(true);\n    setIsPlaying(false);\n    const user = auth.currentUser;\n    if (!user) return;\n    const scoreData = {\n      userId: user.uid,\n      username: user.displayName || user.email || \"Anonymous\",\n      game: \"Pack Memory\",\n      score: finalScore,\n      dogboneEarned: finalScore,\n      timestamp: serverTimestamp()\n    };\n    try {\n      await addDoc(collection(db, \"gameScores\"), scoreData);\n    } catch (error) {\n      console.error(\"Failed to save score:\", error);\n    }\n  };\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current); // Cleanup\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini-game-page\",\n    children: [/*#__PURE__*/_jsxDEV(GameHighScoreLeaderboard, {\n      game: \"Pack Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !isPlaying && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Start Pack Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(PackMemory, \"9jEMy+9pCRrTDUIjUkGUaNpgTL4=\");\n_c = PackMemory;\nexport default PackMemory;\nvar _c;\n$RefreshReg$(_c, \"PackMemory\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GameHighScoreLeaderboard","db","auth","addDoc","collection","serverTimestamp","jsxDEV","_jsxDEV","PackMemory","_s","score","setScore","gameOver","setGameOver","isPlaying","setIsPlaying","intervalRef","startGame","current","setInterval","prevScore","newScore","Math","floor","random","clearInterval","endGame","finalScore","user","currentUser","scoreData","userId","uid","username","displayName","email","game","dogboneEarned","timestamp","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Inplay Dogs/inplaydogs-project/frontend/src/components/DogboneArcade/mini-games/PackMemory.js"],"sourcesContent":["// src/components/DogboneArcade/mini-games/PackMemory.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GameHighScoreLeaderboard from \"../../leaderboards/GameHighScoreLeaderboard\";\r\nimport { db, auth } from \"../../../firebaseConfig\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport \"./PackMemory.css\";\r\n\r\nconst PackMemory = () => {\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startGame = () => {\r\n    setScore(0);\r\n    setGameOver(false);\r\n    setIsPlaying(true);\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setScore((prevScore) => {\r\n        const newScore = prevScore + Math.floor(Math.random() * 3) + 1;\r\n        if (newScore >= 50) {\r\n          clearInterval(intervalRef.current);\r\n          endGame(newScore);\r\n        }\r\n        return newScore;\r\n      });\r\n    }, 400);\r\n  };\r\n\r\n  const endGame = async (finalScore) => {\r\n    setGameOver(true);\r\n    setIsPlaying(false);\r\n\r\n    const user = auth.currentUser;\r\n    if (!user) return;\r\n\r\n    const scoreData = {\r\n      userId: user.uid,\r\n      username: user.displayName || user.email || \"Anonymous\",\r\n      game: \"Pack Memory\",\r\n      score: finalScore,\r\n      dogboneEarned: finalScore,\r\n      timestamp: serverTimestamp(),\r\n    };\r\n\r\n    try {\r\n      await addDoc(collection(db, \"gameScores\"), scoreData);\r\n    } catch (error) {\r\n      console.error(\"Failed to save score:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(intervalRef.current); // Cleanup\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mini-game-page\">\r\n      <GameHighScoreLeaderboard game=\"Pack Memory\" />\r\n      <div className=\"game-container\">\r\n        <h3>Score: {score}</h3>\r\n        {!isPlaying && !gameOver && (\r\n          <button onClick={startGame}>Start Pack Memory</button>\r\n        )}\r\n        {gameOver && (\r\n          <p>Game Over! Your score: <strong>{score}</strong></p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackMemory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
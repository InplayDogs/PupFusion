{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inplay Dogs\\\\inplaydogs-project\\\\frontend\\\\src\\\\components\\\\leaderboards\\\\MonthlyLeaderboard.js\",\n  _s = $RefreshSig$();\n// src/components/leaderboards/MonthlyLeaderboard.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../firebaseConfig\";\nimport { collection, query, where, orderBy, getDocs, Timestamp } from \"firebase/firestore\";\nimport \"./MonthlyLeaderboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyLeaderboard = () => {\n  _s();\n  const [leaders, setLeaders] = useState([]);\n  useEffect(() => {\n    const fetchMonthlyScores = async () => {\n      try {\n        const thirtyDaysAgo = Timestamp.fromDate(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000));\n        const q = query(collection(db, \"gameScores\"), where(\"timestamp\", \">=\", thirtyDaysAgo), orderBy(\"timestamp\", \"desc\"));\n        const snapshot = await getDocs(q);\n        const userTotals = {};\n        snapshot.docs.forEach(doc => {\n          const {\n            userId,\n            username,\n            dogboneEarned\n          } = doc.data();\n          if (!userId) return;\n          if (!userTotals[userId]) {\n            userTotals[userId] = {\n              username: username || \"Anonymous\",\n              total: 0\n            };\n          }\n          userTotals[userId].total += dogboneEarned || 0;\n        });\n        const sortedLeaders = Object.values(userTotals).sort((a, b) => b.total - a.total).slice(0, 10);\n        setLeaders(sortedLeaders);\n      } catch (error) {\n        console.error(\"Error fetching monthly leaderboard:\", error);\n      }\n    };\n    fetchMonthlyScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monthly-leaderboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly DOGBONE Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaders.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rank\",\n          children: [\"#\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          children: user.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyLeaderboard, \"FKaCzdRRT71i5zMzmrnYXWFqgMk=\");\n_c = MonthlyLeaderboard;\nexport default MonthlyLeaderboard;\nvar _c;\n$RefreshReg$(_c, \"MonthlyLeaderboard\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","orderBy","getDocs","Timestamp","jsxDEV","_jsxDEV","MonthlyLeaderboard","_s","leaders","setLeaders","fetchMonthlyScores","thirtyDaysAgo","fromDate","Date","now","q","snapshot","userTotals","docs","forEach","doc","userId","username","dogboneEarned","data","total","sortedLeaders","Object","values","sort","a","b","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","_c","$RefreshReg$"],"sources":["C:/Users/Inplay Dogs/inplaydogs-project/frontend/src/components/leaderboards/MonthlyLeaderboard.js"],"sourcesContent":["// src/components/leaderboards/MonthlyLeaderboard.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebaseConfig\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  getDocs,\r\n  Timestamp,\r\n} from \"firebase/firestore\";\r\nimport \"./MonthlyLeaderboard.css\";\r\n\r\nconst MonthlyLeaderboard = () => {\r\n  const [leaders, setLeaders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMonthlyScores = async () => {\r\n      try {\r\n        const thirtyDaysAgo = Timestamp.fromDate(\r\n          new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\r\n        );\r\n\r\n        const q = query(\r\n          collection(db, \"gameScores\"),\r\n          where(\"timestamp\", \">=\", thirtyDaysAgo),\r\n          orderBy(\"timestamp\", \"desc\")\r\n        );\r\n\r\n        const snapshot = await getDocs(q);\r\n        const userTotals = {};\r\n\r\n        snapshot.docs.forEach((doc) => {\r\n          const { userId, username, dogboneEarned } = doc.data();\r\n          if (!userId) return;\r\n\r\n          if (!userTotals[userId]) {\r\n            userTotals[userId] = {\r\n              username: username || \"Anonymous\",\r\n              total: 0,\r\n            };\r\n          }\r\n\r\n          userTotals[userId].total += dogboneEarned || 0;\r\n        });\r\n\r\n        const sortedLeaders = Object.values(userTotals)\r\n          .sort((a, b) => b.total - a.total)\r\n          .slice(0, 10);\r\n\r\n        setLeaders(sortedLeaders);\r\n      } catch (error) {\r\n        console.error(\"Error fetching monthly leaderboard:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMonthlyScores();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"monthly-leaderboard\">\r\n      <h2>Monthly DOGBONE Leaderboard</h2>\r\n      <ul>\r\n        {leaders.map((user, index) => (\r\n          <li key={index}>\r\n            <span className=\"rank\">#{index + 1}</span>\r\n            <span className=\"name\">{user.username}</span>\r\n            <span className=\"score\">{user.total}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyLeaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
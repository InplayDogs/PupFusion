{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inplay Dogs\\\\inplaydogs-project\\\\frontend\\\\src\\\\components\\\\DogboneArcade\\\\mini-games\\\\DigYard.js\",\n  _s = $RefreshSig$();\n// src/components/DogboneArcade/mini-games/DigYard.js\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../../../firebaseConfig\";\nimport { doc, getDoc, setDoc, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport GameHighScoreLeaderboard from \"../../leaderboards/GameHighScoreLeaderboard\";\nimport \"./DigYard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigYard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [score, setScore] = useState(0);\n  const [energy, setEnergy] = useState(5);\n  const [dogbone, setDogbone] = useState(0);\n  const [message, setMessage] = useState(\"Click a patch to dig!\");\n  const [grid, setGrid] = useState(Array(25).fill(null));\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async u => {\n      if (u) {\n        setUser(u);\n        const userRef = doc(db, \"users\", u.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          const data = userSnap.data();\n          setDogbone(data.totalDogbone || 0);\n        }\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleDig = async index => {\n    if (gameOver || grid[index]) return;\n    if (energy <= 0) {\n      setMessage(\"You're out of energy!\");\n      return;\n    }\n    const outcome = Math.random();\n    let reward = 0;\n    let emoji = \"❌\";\n    if (outcome > 0.85) {\n      reward = 50;\n      emoji = \"💎\";\n    } else if (outcome > 0.6) {\n      reward = 20;\n      emoji = \"🦴\";\n    } else if (outcome > 0.3) {\n      reward = 10;\n      emoji = \"🎾\";\n    }\n    const newGrid = [...grid];\n    newGrid[index] = emoji;\n    setGrid(newGrid);\n    setScore(prev => prev + reward);\n    setDogbone(prev => prev + reward);\n    setEnergy(prev => prev - 1);\n    setMessage(reward > 0 ? `You found ${emoji} and earned ${reward} DOGBONE!` : \"Nothing here...\");\n    if (energy - 1 <= 0) {\n      setGameOver(true);\n      await saveScore();\n    }\n  };\n  const saveScore = async () => {\n    if (!user || score === 0) return;\n    await updateDoc(doc(db, \"users\", user.uid), {\n      totalDogbone: dogbone\n    });\n    await setDoc(doc(db, \"gameScores\", `${user.uid}_digyard_${Date.now()}`), {\n      userId: user.uid,\n      username: user.email,\n      game: \"Dig Yard\",\n      score,\n      dogboneEarned: score,\n      timestamp: serverTimestamp()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini-game-page\",\n    children: [/*#__PURE__*/_jsxDEV(GameHighScoreLeaderboard, {\n      game: \"Dig Yard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Energy: \", energy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"DOGBONE: \", dogbone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"yard\",\n        children: grid.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dirt-patch ${cell ? \"dug\" : \"\"}`,\n          onClick: () => handleDig(index),\n          children: cell\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(DigYard, \"C/t6JuGQax2zZ5iveTNb90G8eaY=\");\n_c = DigYard;\nexport default DigYard;\nvar _c;\n$RefreshReg$(_c, \"DigYard\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","doc","getDoc","setDoc","updateDoc","serverTimestamp","GameHighScoreLeaderboard","jsxDEV","_jsxDEV","DigYard","_s","user","setUser","score","setScore","energy","setEnergy","dogbone","setDogbone","message","setMessage","grid","setGrid","Array","fill","gameOver","setGameOver","unsubscribe","onAuthStateChanged","u","userRef","uid","userSnap","exists","data","totalDogbone","handleDig","index","outcome","Math","random","reward","emoji","newGrid","prev","saveScore","Date","now","userId","username","email","game","dogboneEarned","timestamp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cell","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Inplay Dogs/inplaydogs-project/frontend/src/components/DogboneArcade/mini-games/DigYard.js"],"sourcesContent":["// src/components/DogboneArcade/mini-games/DigYard.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../../../firebaseConfig\";\r\nimport { doc, getDoc, setDoc, updateDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport GameHighScoreLeaderboard from \"../../leaderboards/GameHighScoreLeaderboard\";\r\nimport \"./DigYard.css\";\r\n\r\nconst DigYard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [energy, setEnergy] = useState(5);\r\n  const [dogbone, setDogbone] = useState(0);\r\n  const [message, setMessage] = useState(\"Click a patch to dig!\");\r\n  const [grid, setGrid] = useState(Array(25).fill(null));\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (u) => {\r\n      if (u) {\r\n        setUser(u);\r\n        const userRef = doc(db, \"users\", u.uid);\r\n        const userSnap = await getDoc(userRef);\r\n        if (userSnap.exists()) {\r\n          const data = userSnap.data();\r\n          setDogbone(data.totalDogbone || 0);\r\n        }\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleDig = async (index) => {\r\n    if (gameOver || grid[index]) return;\r\n    if (energy <= 0) {\r\n      setMessage(\"You're out of energy!\");\r\n      return;\r\n    }\r\n\r\n    const outcome = Math.random();\r\n    let reward = 0;\r\n    let emoji = \"❌\";\r\n\r\n    if (outcome > 0.85) {\r\n      reward = 50;\r\n      emoji = \"💎\";\r\n    } else if (outcome > 0.6) {\r\n      reward = 20;\r\n      emoji = \"🦴\";\r\n    } else if (outcome > 0.3) {\r\n      reward = 10;\r\n      emoji = \"🎾\";\r\n    }\r\n\r\n    const newGrid = [...grid];\r\n    newGrid[index] = emoji;\r\n    setGrid(newGrid);\r\n    setScore((prev) => prev + reward);\r\n    setDogbone((prev) => prev + reward);\r\n    setEnergy((prev) => prev - 1);\r\n\r\n    setMessage(\r\n      reward > 0\r\n        ? `You found ${emoji} and earned ${reward} DOGBONE!`\r\n        : \"Nothing here...\"\r\n    );\r\n\r\n    if (energy - 1 <= 0) {\r\n      setGameOver(true);\r\n      await saveScore();\r\n    }\r\n  };\r\n\r\n  const saveScore = async () => {\r\n    if (!user || score === 0) return;\r\n\r\n    await updateDoc(doc(db, \"users\", user.uid), {\r\n      totalDogbone: dogbone,\r\n    });\r\n\r\n    await setDoc(doc(db, \"gameScores\", `${user.uid}_digyard_${Date.now()}`), {\r\n      userId: user.uid,\r\n      username: user.email,\r\n      game: \"Dig Yard\",\r\n      score,\r\n      dogboneEarned: score,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mini-game-page\">\r\n      <GameHighScoreLeaderboard game=\"Dig Yard\" />\r\n      <div className=\"game-container\">\r\n        <h3>Score: {score}</h3>\r\n        <h4>Energy: {energy}</h4>\r\n        <h4>DOGBONE: {dogbone}</h4>\r\n        <p className=\"message\">{message}</p>\r\n        <div className=\"yard\">\r\n          {grid.map((cell, index) => (\r\n            <div\r\n              key={index}\r\n              className={`dirt-patch ${cell ? \"dug\" : \"\"}`}\r\n              onClick={() => handleDig(index)}\r\n            >\r\n              {cell}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DigYard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}